name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Replace Firebase Configuration
        run: |
          # Create the Firebase config from secrets
          cat > firebase-config.js << 'EOF'
          const FIREBASE_CONFIG = {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              databaseURL: "${{ secrets.FIREBASE_DATABASE_URL }}",
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}"
          };
          EOF
          
          # Replace the Firebase config in app.js
          sed -i '/^const FIREBASE_CONFIG = {/,/^};/c\
          const FIREBASE_CONFIG = {\
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",\
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",\
              databaseURL: "${{ secrets.FIREBASE_DATABASE_URL }}",\
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",\
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",\
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",\
              appId: "${{ secrets.FIREBASE_APP_ID }}"\
          };' app.js

      - name: Replace Google Maps API Key
        run: |
          # Replace Google Maps API key in app.js if it exists
          if [ -n "${{ secrets.GOOGLE_MAPS_API_KEY }}" ]; then
            sed -i 's/PLACEHOLDER_GOOGLE_MAPS_API_KEY/${{ secrets.GOOGLE_MAPS_API_KEY }}/g' app.js
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4