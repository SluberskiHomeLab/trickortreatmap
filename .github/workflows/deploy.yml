name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Debug - Show secrets status
        run: |
          echo "🔍 Debugging secret configuration..."
          echo "FIREBASE_API_KEY present: ${{ secrets.FIREBASE_API_KEY != '' }}"
          echo "FIREBASE_PROJECT_ID present: ${{ secrets.FIREBASE_PROJECT_ID != '' }}"
          echo "GOOGLE_MAPS_API_KEY present: ${{ secrets.GOOGLE_MAPS_API_KEY != '' }}"

      - name: Create Runtime Configuration
        run: |
          echo "🔧 Creating runtime configuration file..."
          
          # Create config.js using printf to avoid heredoc issues
          printf '%s\n' \
            "// Runtime configuration injected by GitHub Actions" \
            "window.RUNTIME_CONFIG = {" \
            "  firebase: {" \
            "    apiKey: \"${{ secrets.FIREBASE_API_KEY }}\"," \
            "    authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\"," \
            "    databaseURL: \"${{ secrets.FIREBASE_DATABASE_URL }}\"," \
            "    projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\"," \
            "    storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"," \
            "    messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"," \
            "    appId: \"${{ secrets.FIREBASE_APP_ID }}\"" \
            "  }," \
            "  googleMapsApiKey: \"${{ secrets.GOOGLE_MAPS_API_KEY }}\"," \
            "  isConfigured: true," \
            "  deploymentTimestamp: \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"" \
            "};" \
            "" \
            "console.log('🔧 Runtime configuration loaded from GitHub Actions');" \
            "console.log('⏰ Deployed at:', window.RUNTIME_CONFIG.deploymentTimestamp);" \
            "" \
            "// Validate Firebase configuration" \
            "if (window.RUNTIME_CONFIG.firebase.apiKey && window.RUNTIME_CONFIG.firebase.apiKey.length > 10) {" \
            "  console.log('✅ Firebase configured via runtime config');" \
            "} else {" \
            "  console.log('❌ Firebase not properly configured');" \
            "}" \
            "" \
            "// Validate Google Maps configuration" \
            "if (window.RUNTIME_CONFIG.googleMapsApiKey && window.RUNTIME_CONFIG.googleMapsApiKey.length > 10) {" \
            "  console.log('✅ Google Maps configured via runtime config');" \
            "} else {" \
            "  console.log('❌ Google Maps not configured');" \
            "}" > config.js
          
          echo "✅ Runtime configuration created"
          echo "📊 File size: $(wc -c < config.js) bytes"
          echo ""
          echo "📄 First 15 lines of config.js:"
          head -15 config.js

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4